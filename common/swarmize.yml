---
- hosts: all
  become: yes
  pre_tasks:
    - name: Ansible Dir present
      file:
        path: /shathel-ansible
        state: directory
  tasks:
      - name: Common Facts
        set_fact:
          head_node: "{{ groups['shathel_manager_hosts'][0] }}"
          head_private_ip: "{{ hostvars[groups['shathel_manager_hosts'][0]]['private_ip'] }}"
          private_ip: "{{hostvars[inventory_hostname]['private_ip']}}"
          public_ip: "{{hostvars[inventory_hostname]['public_ip']}}"
          current_is_manager: "{{inventory_hostname in groups['shathel_manager_hosts']}}"
          current_name: "{{shathel_name}}"
      - name: Manager Facts
        set_fact:
          current_index: "{{ groups['shathel_manager_hosts'].index(inventory_hostname) }}"
          current_tag: "manager"
        when:  current_is_manager
      - name: Worker Facts
        set_fact:
            current_index: "{{ groups['shathel_worker_hosts'].index(inventory_hostname) }}"
            current_tag: "worker"
        when:  not current_is_manager

      - name: Verifying node info
        debug: msg="name={{current_name}}, manager={{current_is_manager}}, tag={{current_tag}}, head_ip={{head_private_ip}}, publicIp={{ public_ip }}, private_ip={{ private_ip }}"

      - copy:
          src: "{{shathel_envpackage_certs_dir}}/{{current_name}}/server-key.pem"
          dest: /etc/docker/server-key.pem
          owner: root
          group: root
          mode: 0400
      - copy:
          src: "{{shathel_envpackage_certs_dir}}/{{current_name}}/server-cert.pem"
          dest: /etc/docker/server-cert.pem
          owner: root
          group: root
          mode: 0444
      - copy:
          src: "{{shathel_envpackage_certs_dir}}/ca-cert.pem"
          dest: /etc/docker/ca.pem
          owner: root
          group: root
          mode: 0444
      - name: DockerD options
        lineinfile:
          destfile: /lib/systemd/system/docker.service
          regexp: '^ExecStart=/usr/bin/dockerd.*$'
          line: 'ExecStart=/usr/bin/dockerd --tlsverify --tlscacert=/etc/docker/ca.pem --tlscert=/etc/docker/server-cert.pem --tlskey=/etc/docker/server-key.pem -H fd:// -H {{private_ip}}:2376'
          state: present
        notify:
            - restart dockerd



      - name: Check if swarm is initiated on node
        shell: "docker info | grep 'Swarm: active'"
        register: machine_swarm_inited_marker
        failed_when: "machine_swarm_inited_marker.rc != 1 and machine_swarm_inited_marker.rc != 0"
        changed_when: False
      - name: Initialize swarm on first node.
        command: docker swarm init --advertise-addr {{private_ip}}
        when: machine_swarm_inited_marker.rc != 0 and private_ip == head_private_ip
      - name: Fetch Manager token.
        command: docker swarm join-token -q {{ (current_is_manager) | ternary('manager','worker') }}
        register: machine_swarm_token
        delegate_to: "{{head_node}}"
        when: machine_swarm_inited_marker.rc != 0 and private_ip != head_private_ip
      - name: Join swarm
        command: docker swarm join --token {{machine_swarm_token.stdout}} --advertise-addr {{private_ip}} {{head_private_ip}}:2377
        when: machine_swarm_inited_marker.rc != 0 and private_ip != head_private_ip



  handlers:
      - name: restart dockerd
        systemd:
            state: restarted
            daemon_reload: yes
            name: docker

