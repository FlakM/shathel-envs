---
- hosts: all
  become: yes
  pre_tasks:
    - name: Ansible Dir present
      file:
        path: /shathel-ansible
        state: directory
  tasks:
      - include: ./gatherfacts.yml
      - copy:
          src: "{{shathel_envpackage_certs_dir}}/{{current_name}}/server-key.pem"
          dest: /etc/docker/server-key.pem
          owner: root
          group: root
          mode: 0400
      - copy:
          src: "{{shathel_envpackage_certs_dir}}/{{current_name}}/server-cert.pem"
          dest: /etc/docker/server-cert.pem
          owner: root
          group: root
          mode: 0444
      - copy:
          src: "{{shathel_envpackage_certs_dir}}/ca-cert.pem"
          dest: /etc/docker/ca.pem
          owner: root
          group: root
          mode: 0444
      - name: DockerD options
        lineinfile:
          destfile: /lib/systemd/system/docker.service
          regexp: '^ExecStart=/usr/bin/dockerd.*$'
#           !!!! fuck ISSUE https://github.com/docker/libnetwork/pull/1675
          line: 'ExecStart=/usr/bin/dockerd --dns 8.8.8.8 --dns 8.8.4.4 --iptables=true --ip={{private_ip}}  --tlsverify --tlscacert=/etc/docker/ca.pem --tlscert=/etc/docker/server-cert.pem --tlskey=/etc/docker/server-key.pem -H fd:// -H {{private_ip}}:2376'
          state: present
        notify:
            - restart dockerd


  handlers:
      - name: restart dockerd
        systemd:
            state: restarted
            daemon_reload: yes
            name: docker
#        notify: Reboot
#      - name: Reboot
#        command: shutdown -t 1 -r now "Reboot triggered by Ansible script"
#        async: 1
#        poll: 0
#        ignore_errors: true
#        become: true
#        become_method: sudo
#        changed_when: True
#        notify: Wait for host
#      - name: Wait for host
#        delegate_to: 127.0.0.1
#        wait_for:
#          host: "{{ public_ip }}"
#          state: started
#          port: 22
#        become: no


- hosts: all
  become: yes
  tasks:
      - name: Check if swarm is initiated on node
        shell: "docker info | grep 'Swarm: active'"
        register: machine_swarm_inited_marker
        failed_when: "machine_swarm_inited_marker.rc != 1 and machine_swarm_inited_marker.rc != 0"
        changed_when: False
      - name: Initialize swarm on first node.
        command: docker swarm init --advertise-addr {{private_ip}}
        when: machine_swarm_inited_marker.rc != 0 and private_ip == head_private_ip
      - name: Fetch Manager token.
        command: docker swarm join-token -q {{ (current_is_manager) | ternary('manager','worker') }}
        register: machine_swarm_token
        delegate_to: "{{head_node}}"
        when: machine_swarm_inited_marker.rc != 0 and private_ip != head_private_ip
      - name: Join swarm
        command: docker swarm join --token {{machine_swarm_token.stdout}} --advertise-addr {{private_ip}} {{head_private_ip}}:2377
        when: machine_swarm_inited_marker.rc != 0 and private_ip != head_private_ip